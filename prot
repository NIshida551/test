<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="UTF-8">
<title>母音判定トレーニングアプリ</title>
</head>
<body>
<h1>母音判定トレーニングアプリ</h1>
<button id="recordButton">録音開始</button>
<div id="result"></div>
<script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"></script>
<script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/speech-commands"></script>
<script src="app.js"></script>
</body>
</html>
// app.js
const recordButton = document.getElementById('recordButton');
const resultDiv = document.getElementById('result');

recordButton.addEventListener('click', async () => {
  // ユーザーにマイクの使用許可を求める
  const stream = await navigator.mediaDevices.getUserMedia({ audio: true, video: false });
  // ここで録音処理を行う
  // ...
  // 録音が終わったらサーバーにデータを送信
});
# app.py (Flask API)
from flask import Flask, request, jsonify
app = Flask(__name__)

@app.route('/', methods=['POST'])
def analyze():
    # ここで音声データを受け取り、分析する
    # ...
    # 結果をJSON形式で返す
    return jsonify({'result': 'あなたの発した母音は...'})

if __name__ == '__main__':
    app.run(debug=True)

// app.js (続き)
// ...

record.addEventListener('click', async () => {
  // ...
  // 録音が終わったらサーバーにデータ送信
  const response = await fetch('/analyze', {
    method: 'POST',
    body: recordedAudio, // 録音デ
    headers: {
      'Content-Type': 'audio/wav'
    }
  });
  const result = await response.json  // 結果を画面に表示
  resultDiv.textContent = result.result;
});
